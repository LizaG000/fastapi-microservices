version: "1.1"

services:
  user_microservice:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.user_microservice
    environment:
      CONFIG_PATH: /app/configs/config_user_microservice.toml
      HOST: ${HOST}
      PORT: ${PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8000:8000"
    volumes:
      - ../user_microservice:/app/user_microservice:ro
      - ../user_microservice/infra/postgres/migrations/versions:/app/user_microservice/infra/postgres/migrations/versions:rw

  database:
    image: postgres:15.2
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  registration-api:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile.registration
    container_name: registration-api
    ports:
      - "5000:5000"
      - "7000:7000"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:5000"
      DOTNET_RUNNING_IN_CONTAINER: "true"
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "false"
      HOST: ${HOST}
      PORT: ${PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    volumes:
      - ./registration/Migrations:/app/registration/Migrations

  rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq
        - rabbitmq_conf:/etc/rabbitmq



volumes:
  pgdata:
  pgadmin_data:
  rabbitmq_data:
  rabbitmq_conf: